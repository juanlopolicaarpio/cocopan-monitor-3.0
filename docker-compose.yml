version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cocopan_postgres
    environment:
      POSTGRES_DB: cocopan_monitor
      POSTGRES_USER: cocopan
      POSTGRES_PASSWORD: cocopan123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - cocopan_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cocopan -d cocopan_monitor"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # CocoPan Monitor Service (Background scheduler with admin alerts)
  monitor:
    shm_size: '2gb'  # Important for browsers
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cocopan_monitor
    command: python monitor_service.py
    environment:
      - DATABASE_URL=postgresql://postgres:sNsZAtfCjQjascvdokGMJkVzBQwnwCmA@switchyard.proxy.rlwy.net:50401/railway




      - TIMEZONE=Asia/Manila
      - TZ=Asia/Manila
      - LOG_LEVEL=INFO
      - MONITOR_START_HOUR=6
      - MONITOR_END_HOUR=21
      - CHECK_INTERVAL_MINUTES=60
      - REQUEST_TIMEOUT=15
      - MAX_RETRIES=3
      - RETRY_DELAY=5
      # Admin email alerts
      - ALERTS_ENABLED=true
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USE_TLS=true
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
    volumes:
      - ./branch_urls.json:/app/branch_urls.json:ro
      - ./admin_alerts.json:/app/admin_alerts.json:ro
      - monitor_logs:/app/logs
    networks:
      - cocopan_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: "1.5G"   # Increased for browsers
          cpus: "0.5"
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import sys; sys.exit(0)' || exit 1"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

  # Streamlit Dashboard (Client-facing)
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cocopan_dashboard
    command: >
      streamlit run enhanced_dashboard.py
      --server.port=8501
      --server.address=0.0.0.0
      --server.headless=true
      --browser.gatherUsageStats=false
    environment:
      - DATABASE_URL=postgresql://postgres:sNsZAtfCjQjascvdokGMJkVzBQwnwCmA@switchyard.proxy.rlwy.net:50401/railway




      - TIMEZONE=Asia/Manila
      - DASHBOARD_AUTO_REFRESH=300
    ports:
      - "8501:8501"
    networks:
      - cocopan_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.3"
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8501/healthz || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Admin Dashboard (Phase 2 - Manual Verification Interface)
  admin:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cocopan_admin
    command: >
      streamlit run admin_dashboard.py
      --server.port=8502
      --server.address=0.0.0.0
      --server.headless=true
      --browser.gatherUsageStats=false
    environment:
      - DATABASE_URL=postgresql://postgres:sNsZAtfCjQjascvdokGMJkVzBQwnwCmA@switchyard.proxy.rlwy.net:50401/railway




      - TIMEZONE=Asia/Manila
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - LOG_LEVEL=INFO
    ports:
      - "8502:8502"
    volumes:
      - ./admin_alerts.json:/app/admin_alerts.json:ro
    networks:
      - cocopan_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8502/healthz || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: pgAdmin for database management (disabled by default)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cocopan_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cocopan.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - cocopan_network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - admin  # Only run when using --profile admin
    deploy:
      resources:
        limits:
          memory: 256M

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  monitor_logs:
    driver: local

networks:
  cocopan_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16